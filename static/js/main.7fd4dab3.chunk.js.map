{"version":3,"sources":["Components/GlobalStyles.js","utils/setAuthToken.js","actions/alert.js","actions/types.js","actions/auth.js","Components/layouts/Header.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeConatiner.js","Routes/Talent/TalentPresenter.js","Routes/Talent/index.js","Routes/Talent/TalentContainer.js","Routes/Profile/ProfilePresenter.js","Routes/Profile/index.js","Routes/Profile/ProfileContainer.js","Components/layouts/Alert.js","Routes/Login/LoginPresenter.js","Routes/Login/index.js","Routes/Login/LoginContainer.js","Routes/Register/RegisterPresenter.js","Routes/Register/index.js","Routes/Register/RegisterContainer.js","Routes/ProfileForms/ProfileFormPresenter.js","Routes/ProfileForms/index.js","Routes/ProfileForms/ProfileFormContainer.js","Routes/ProfileDetail/DetailPresenter.js","Routes/ProfileDetail/index.js","Routes/ProfileDetail/DetailContainer.js","Components/layouts/Footer.js","Components/CreateBtn.js","Components/Router.js","reducers/auth.js","reducers/alert.js","reducers/index.js","store.js","Components/App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","setAuthToken","token","axios","defaults","headers","common","setAlert","valid","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","loadUser","a","async","localStorage","get","res","data","Header","styled","header","Container","div","LogoBox","Logo","Link","NavBar","Li","li","props","current","Item","AuthBar","withRouter","pathname","location","useDispatch","auth","useSelector","state","console","log","to","loading","isAuthenticated","onClick","Main","main","Wrapper","section","ContentBox","Top","Avatar","IntroBox","HomePresenter","time","className","HomeConatiner","getTime","date","Date","minutes","getMinutes","hours","getHours","seconds","getSeconds","useState","setTime","useEffect","timer","window","setInterval","clearInterval","TalentPresenter","TalentContainer","ProfileBox","GridBox","List","ProfilePresenter","href","ProfileContainer","AlertBox","Alert","alerts","alert","length","map","key","Array","isArray","i","msg","Hbox","Hlink","LoginBox","animate","keyframes","Form","form","FormGroup","Input","input","Submit","Signup","LoginPresenter","handleSubmit","handleChange","formData","onSubmit","e","name","placeholder","value","email","onChange","required","password","minLength","LoginContainer","setFormData","target","preventDefault","config","body","post","errors","response","login","RegisterPresenter","password2","RegisterContainer","register","Select","select","ProfileFormPresenter","displaySocialInputs","toggleSocialInputs","status","company","website","skills","githubusername","bio","youtube","ProfileFormContainer","DetailPresenter","DetailContainer","Footer","footer","ItemBox","FooterTitle","ButtonBox","Button","CreateBtn","path","exact","component","Home","Talent","Profile","Login","Register","ProfileDetail","ProfileForms","from","initialState","getItem","user","combineReducers","action","removeItem","setItem","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","GlobalStyles","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fd4dab3.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n ${reset};\r\n body{\r\n    background-color: #ffffff;\r\n    color: #555;\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    background-color: #ffffff;\r\n    color: #555;\r\n }\r\n * {\r\n    box-sizing: border-box;\r\n }\r\n a{\r\n    color: #1abc9c;\r\n    word-break: keep-all;\r\n    text-decoration : none !important;\r\n    color : #fff;\r\n    :hover {\r\n       color : none;\r\n    }\r\n }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\nimport uuid from \"uuid\";\r\n\r\nexport const setAlert = (valid, alertType, timeout = 1500) => dispatch => {\r\n  const id = uuid.v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { valid, alertType, id }\r\n  });\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: REMOVE_ALERT,\r\n      payload: id\r\n    });\r\n  }, timeout);\r\n};\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n//\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"http://localhost:5000/api/users/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\nexport const register = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  const { name, email, password } = formData;\r\n  const body = { name, email, password };\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/api/users/register\",\r\n      body,\r\n      config\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.valid;\r\n    console.log(errors);\r\n    dispatch(setAlert(errors, \"danger\"));\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  const body = { email, password };\r\n  try {\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/api/users/login\",\r\n      body,\r\n      config\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.valid;\r\n    console.log(errors);\r\n    dispatch(setAlert(errors, \"danger\"));\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\nexport const logout = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Header = styled.header`\r\n  padding: 40px 0 30px 0;\r\n  background-color: #c400c4;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  padding: 10px;\r\n  display: flex;\r\n`;\r\nconst LogoBox = styled.div`\r\n  display: flex;\r\n`;\r\nconst Logo = styled(Link)`\r\n  font-size: 24px;\r\n  text-transform: uppercase;\r\n  padding: 10px;\r\n  font-weight: 600;\r\n  letter-spacing: 2px;\r\n`;\r\nconst NavBar = styled.div`\r\n  width: 100%;\r\n  max-height: 340px;\r\n  ul {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\nconst Li = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  a {\r\n    color: ${props => (props.current ? \"#000\" : \"#fff\")};\r\n  }\r\n`;\r\nconst Item = styled(Link)`\r\n  padding: 15px;\r\n  font-weight: 500;\r\n  letter-spacing: 2px;\r\n  font-size: 16px;\r\n  transition: 0.1s linear;\r\n  &:hover {\r\n    color: #000;\r\n  }\r\n`;\r\nconst AuthBar = styled.div`\r\n  ul {\r\n    display: flex;\r\n  }\r\n  li:not(:last-child) {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n  a {\r\n    padding: 15px 0;\r\n  }\r\n`;\r\nexport default withRouter(({ location: { pathname } }) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  console.log(auth);\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <LogoBox>\r\n          <Logo to=\"/\">Nolla</Logo>\r\n        </LogoBox>\r\n        <NavBar>\r\n          <ul>\r\n            <Li current={pathname === \"/talent\"}>\r\n              <Item to=\"/talent\">능력자</Item>\r\n            </Li>\r\n            <Li current={pathname === \"/profile\"}>\r\n              <Item to=\"/profile\">프로필</Item>\r\n            </Li>\r\n          </ul>\r\n        </NavBar>\r\n        <AuthBar>\r\n          {auth.loading ? null : (\r\n            <>\r\n              {auth.isAuthenticated && auth.isAuthenticated ? (\r\n                <>\r\n                  <ul>\r\n                    <Li>\r\n                      <Item to=\"/\" onClick={() => dispatch(logout())}>\r\n                        로그아웃\r\n                      </Item>\r\n                    </Li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    <Li>\r\n                      <Item to=\"/login\">로그인</Item>\r\n                    </Li>\r\n                    <Li>\r\n                      <Item to=\"/register\">회원가입</Item>\r\n                    </Li>\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </AuthBar>\r\n      </Container>\r\n    </Header>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 70px 0;\r\n`;\r\nconst ContentBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\nconst Top = styled.div`\r\n  p {\r\n    font-size: 35px;\r\n    margin-bottom: 30px;\r\n    margin-top: 30px;\r\n    font-weight: 700;\r\n  }\r\n`;\r\nconst Avatar = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 1px solid;\r\n  border-radius: 120px;\r\n  margin: auto;\r\n`;\r\nconst IntroBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 60%;\r\n  background-color: #f3d0ff;\r\n  margin: auto;\r\n  border-radius: 5px;\r\n  padding: 40px 0;\r\n  color: #4e4e4e;\r\n  h2 {\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n  }\r\n  p {\r\n    font-size: 20px;\r\n    font-weight: 550;\r\n  }\r\n`;\r\nconst HomePresenter = ({ time }) => {\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <ContentBox>\r\n            <Top>\r\n              <Avatar></Avatar>\r\n              <p>반갑습니다.</p>\r\n            </Top>\r\n            <div>\r\n              <p>자신을 소개하는 글입니다.</p>\r\n            </div>\r\n          </ContentBox>\r\n          <IntroBox>\r\n            <h2>NOLLA에 오신 것을 환영합니다.</h2>\r\n            <p>\r\n              시간 <small className=\"clock\">{time}</small>\r\n            </p>\r\n          </IntroBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeConatiner from \"./HomeConatiner\";\r\n\r\nexport default HomeConatiner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nconst HomeConatiner = () => {\r\n  const getTime = () => {\r\n    const date = new Date();\r\n    const minutes = date.getMinutes();\r\n    const hours = date.getHours();\r\n    const seconds = date.getSeconds();\r\n    const now = `${hours < 10 ? `0${hours}` : hours}:${\r\n      minutes < 10 ? `0${minutes}` : minutes\r\n    }:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n    return now;\r\n  };\r\n  let [time, setTime] = useState(getTime());\r\n\r\n  useEffect(() => {\r\n    const timer = window.setInterval(() => {\r\n      setTime(getTime());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      window.clearInterval(timer);\r\n    };\r\n  }, []);\r\n  //-----------------------------시간\r\n  return <HomePresenter time={time}></HomePresenter>;\r\n};\r\n\r\nexport default HomeConatiner;\r\n","import React from \"react\";\r\n\r\nconst TalentPresenter = () => {\r\n  return <div>Talent</div>;\r\n};\r\n\r\nexport default TalentPresenter;\r\n","import TalentContainer from \"./TalentContainer\";\r\n\r\nexport default TalentContainer;\r\n","import React from \"react\";\r\nimport TalentPresenter from \"./TalentPresenter\";\r\n\r\nconst TalentContainer = () => {\r\n  return <TalentPresenter></TalentPresenter>;\r\n};\r\n\r\nexport default TalentContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 70px 0;\r\n`;\r\nconst ProfileBox = styled.div`\r\n  padding: 10px;\r\n`;\r\nconst GridBox = styled.div`\r\n  height: 200vh;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(150px, 1fr));\r\n  grid-template-rows: 250px repeat(auto-fill, 200px);\r\n  grid-gap: 10px;\r\n  > div:first-child,\r\n  > div:nth-child(2) {\r\n    grid-column: span 2;\r\n  }\r\n`;\r\nconst List = styled.div`\r\n  /* background: linear-gradient(90deg, #ffe1ff, #69d3ff, #ffd1d1); */\r\n  background-color: #a27bff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h4 {\r\n    font-size: 16px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  a {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: #ffffff;\r\n  }\r\n  div:first-child {\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 100px;\r\n    border: 1px solid;\r\n    margin: 10px auto;\r\n  }\r\n  div:nth-child(2) {\r\n    padding: 10px 0 10px 0;\r\n    font-size: 16px;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst ProfilePresenter = () => {\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <ProfileBox>\r\n            <GridBox>\r\n              <List>\r\n                <a href=\"#\">\r\n                  <div>\r\n                    <img />\r\n                  </div>\r\n                  <div>\r\n                    <h4>이름 : 아무개</h4>\r\n                    <p>대표 스킬 : HTML, CSS, JavaScript</p>\r\n                  </div>\r\n                </a>\r\n              </List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n              <List></List>\r\n            </GridBox>\r\n          </ProfileBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default ProfilePresenter;\r\n","import ProfileContainer from \"./ProfileContainer\";\r\n\r\nexport default ProfileContainer;\r\n","import React from \"react\";\r\nimport ProfilePresenter from \"./ProfilePresenter\";\r\n\r\nconst ProfileContainer = () => {\r\n  return <ProfilePresenter></ProfilePresenter>;\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AlertBox = styled.div`\r\n  &.alert {\r\n    padding: 0.8rem;\r\n    margin: 1rem 0;\r\n    opacity: 0.9;\r\n    background: inherit;\r\n    color: #333;\r\n    border-radius: 5px;\r\n  }\r\n  &.alert-danger {\r\n    background: #ff0000cf;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Alert = () => {\r\n  const alerts = useSelector(state => state.alert);\r\n  console.log(alerts);\r\n  return (\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map(alert => (\r\n      <AlertBox key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {Array.isArray(alert.valid)\r\n          ? alert.valid.map((valid, i) => <p key={i}>{valid.msg}</p>)\r\n          : alert.valid}\r\n      </AlertBox>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Alert from \"../../Components/layouts/Alert\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 100px 0;\r\n`;\r\nconst Hbox = styled.div`\r\n  width: 100%;\r\n  padding: 10px 35px;\r\n`;\r\nconst Hlink = styled(Link)`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 10px;\r\n  color: #c400c4;\r\n  :hover {\r\n    color: #c400c4;\r\n  }\r\n`;\r\nconst LoginBox = styled.div`\r\n  width: 500px;\r\n  background-color: #fff;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  padding: 50px 60px 50px;\r\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n`;\r\nconst animate = keyframes`{\r\n  0% {\r\n    background-position : 0%\r\n  }\r\n  100%{\r\n    background-position : 400%\r\n  }\r\n}`;\r\nconst Form = styled.form`\r\n  padding: 20px 0 0 0;\r\n  .last-form {\r\n    padding-top: 20px;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: relative;\r\n    * {\r\n      width: 120px;\r\n      height: 40px;\r\n      text-align: center;\r\n      position: absolute;\r\n      top: 0%;\r\n      color: #fff;\r\n      background: linear-gradient(90deg, #03a9f4, #f441a5, #c400c4, #03a9f4);\r\n      background-size: 400%;\r\n      border-radius: 20px;\r\n      :hover {\r\n        animation: ${animate} 8s linear infinite;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Submit = styled.input`\r\n  all: unset;\r\n  cursor: pointer;\r\n  left: 0;\r\n`;\r\nconst Signup = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  right: 0;\r\n`;\r\n\r\nconst LoginPresenter = ({\r\n  isAuthenticated,\r\n  handleSubmit,\r\n  handleChange,\r\n  ...formData\r\n}) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <LoginBox>\r\n            <Alert />\r\n            <Hbox>\r\n              <Hlink to=\"/\">NOLLA</Hlink>\r\n            </Hbox>\r\n            <Form\r\n              className=\"simple-login-container\"\r\n              onSubmit={e => handleSubmit(e)}\r\n            >\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"이메일\"\r\n                  value={formData.email}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"비밀번호\"\r\n                  value={formData.password}\r\n                  onChange={e => handleChange(e)}\r\n                  minLength=\"6\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"last-form\">\r\n                <Submit\r\n                  type=\"submit\"\r\n                  value=\"로그인\"\r\n                  onClick={e => handleSubmit(e)}\r\n                />\r\n                <Signup to=\"/register\">회원등록</Signup>\r\n              </FormGroup>\r\n            </Form>\r\n          </LoginBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default LoginPresenter;\r\n","import LoginContainer from \"./LoginContainer\";\r\n\r\nexport default LoginContainer;\r\n","import React, { useState } from \"react\";\r\nimport LoginPresenter from \"./LoginPresenter\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nconst LoginContainer = props => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated, []);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = formData;\r\n    dispatch(login(email, password));\r\n  };\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <LoginPresenter\r\n      isAuthenticated={isAuthenticated}\r\n      {...formData}\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Alert from \"../../Components/layouts/Alert\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 100px 0;\r\n`;\r\nconst Hbox = styled.div`\r\n  width: 100%;\r\n  padding: 10px 35px;\r\n`;\r\nconst Hlink = styled(Link)`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 10px;\r\n  color: #c400c4;\r\n  :hover {\r\n    color: #c400c4;\r\n  }\r\n`;\r\nconst LoginBox = styled.div`\r\n  width: 500px;\r\n  background-color: #fff;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  padding: 50px 60px 50px;\r\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n`;\r\nconst animate = keyframes`{\r\n  0% {\r\n    background-position : 0%\r\n  }\r\n  100%{\r\n    background-position : 400%\r\n  }\r\n}`;\r\nconst Form = styled.form`\r\n  padding: 20px 0 0 0;\r\n  .last-form {\r\n    padding-top: 20px;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: relative;\r\n    * {\r\n      font-size: 16px;\r\n      width: 120px;\r\n      height: 40px;\r\n      text-align: center;\r\n      position: absolute;\r\n      top: 0%;\r\n      color: #fff;\r\n      background: linear-gradient(90deg, #03a9f4, #f441a5, #c400c4, #03a9f4);\r\n      background-size: 400%;\r\n      border-radius: 20px;\r\n      :hover {\r\n        animation: ${animate} 8s linear infinite;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Submit = styled.input`\r\n  all: unset;\r\n  cursor: pointer;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n`;\r\nconst RegisterPresenter = ({\r\n  isAuthenticated,\r\n  handleSubmit,\r\n  handleChange,\r\n  ...formData\r\n}) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <LoginBox>\r\n            <Alert />\r\n            <Hbox>\r\n              <Hlink to=\"/\">NOLLA</Hlink>\r\n            </Hbox>\r\n            <Form className=\"simple-login-container\">\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"이름\"\r\n                  value={formData.name}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"이메일\"\r\n                  value={formData.email}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"비밀번호\"\r\n                  value={formData.password}\r\n                  onChange={e => handleChange(e)}\r\n                  minLength=\"6\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  name=\"password2\"\r\n                  placeholder=\"비밀번호 확인\"\r\n                  value={formData.password2}\r\n                  onChange={e => handleChange(e)}\r\n                  minLength=\"6\"\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"last-form\">\r\n                <Submit\r\n                  type=\"submit\"\r\n                  value=\"회원등록\"\r\n                  onClick={e => handleSubmit(e)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </LoginBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default RegisterPresenter;\r\n","import RegisterContainer from \"./RegisterContainer\";\r\n\r\nexport default RegisterContainer;\r\n","import React, { useState } from \"react\";\r\nimport RegisterPresenter from \"./RegisterPresenter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\n\r\nconst RegisterContainer = props => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\"\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated, []);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      //서버에서 보내주는 Error 표출(action을 취할 것)\r\n      dispatch(setAlert(\"패스워드가 다릅니다.\", \"danger\"));\r\n    } else {\r\n      //다 오케이 되면 등록!\r\n      dispatch(register(formData));\r\n    }\r\n  };\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <RegisterPresenter\r\n      isAuthenticated={isAuthenticated}\r\n      {...formData}\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\nexport default RegisterContainer;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 50px 0;\r\n`;\r\nconst Hbox = styled.div`\r\n  width: 100%;\r\n  padding: 10px 35px;\r\n`;\r\nconst Hlink = styled(Link)`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  letter-spacing: 10px;\r\n  color: #c400c4;\r\n  :hover {\r\n    color: #c400c4;\r\n  }\r\n`;\r\nconst LoginBox = styled.div`\r\n  width: 500px;\r\n  background-color: #fff;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n  padding: 50px 60px 50px;\r\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n`;\r\nconst animate = keyframes`{\r\n  0% {\r\n    background-position : 0%\r\n  }\r\n  100%{\r\n    background-position : 400%\r\n  }\r\n}`;\r\nconst Form = styled.form`\r\n  padding: 20px 0 0 0;\r\n  .last-form {\r\n    padding-top: 20px;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: relative;\r\n    margin-top: 10px;\r\n\r\n    * {\r\n      width: 120px;\r\n      height: 40px;\r\n      text-align: center;\r\n      position: absolute;\r\n      top: 0%;\r\n      color: #fff;\r\n      background: linear-gradient(90deg, #03a9f4, #f441a5, #c400c4, #03a9f4);\r\n      background-size: 400%;\r\n      border-radius: 20px;\r\n      :hover {\r\n        animation: ${animate} 8s linear infinite;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Submit = styled.input`\r\n  all: unset;\r\n  cursor: pointer;\r\n  left: 0;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n`;\r\nconst Select = styled.select`\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n`;\r\n\r\nconst ProfileFormPresenter = ({\r\n  displaySocialInputs,\r\n  toggleSocialInputs,\r\n  handleSubmit,\r\n  handleChange,\r\n  ...formData\r\n}) => {\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <LoginBox>\r\n            <Hbox>\r\n              <Hlink to=\"/\">NOLLA</Hlink>\r\n            </Hbox>\r\n            <Form className=\"simple-login-container\">\r\n              <FormGroup className=\"form-group\">\r\n                <Select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={e => handleChange(e)}\r\n                >\r\n                  <option value=\"0\">* 선택하여 주세요</option>\r\n                  <option value=\"Developer\">개발자</option>\r\n                  <option value=\"Junior Developer\">초급 개발자</option>\r\n                  <option value=\"Senior Developer\">중급 개발자</option>\r\n                  <option value=\"Manager\">매니저</option>\r\n                  <option value=\"Student or Learning\">공부중</option>\r\n                  <option value=\"Instructor\">지도자</option>\r\n                  <option value=\"Intern\">인턴</option>\r\n                  <option value=\"Other\">기타</option>\r\n                </Select>\r\n                <small className=\"form-text\">현재 숙련도</small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"company\"\r\n                  placeholder=\"회사\"\r\n                  value={formData.company}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n                <small className=\"form-text\">\r\n                  현재 일하고 있는 회사를 적어주세요.\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"website\"\r\n                  placeholder=\"웹사이트\"\r\n                  value={formData.website}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n                <small className=\"form-text\">\r\n                  현재 일하고 있는 회사의 사이트를 적어주세요.\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  placeholder=\"지역\"\r\n                  value={formData.location}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n                <small className=\"form-text\">\r\n                  현재 살고있는 지역을 적어주세요.\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"skills\"\r\n                  placeholder=\"* 스킬\"\r\n                  value={formData.skills}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n                <small className=\"form-text\">\r\n                  콤마로 구분해서 적어주세요. (ex : html, css,)\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"githubusername\"\r\n                  placeholder=\"Github 이름\"\r\n                  value={formData.githubusername}\r\n                  onChange={e => handleChange(e)}\r\n                  required\r\n                />\r\n                <small className=\"form-text\">\r\n                  깃허브 계정이 있다면 적어주세요.\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup className=\"form-group\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"bio\"\r\n                  placeholder=\"소개\"\r\n                  value={formData.bio}\r\n                  onChange={e => handleChange(e)}\r\n                />\r\n                <small className=\"form-text\">\r\n                  자신에 대한 소개를 해주세요.\r\n                </small>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <button\r\n                  onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                >\r\n                  SNS 링크 추가\r\n                </button>\r\n              </FormGroup>\r\n              {displaySocialInputs && (\r\n                <>\r\n                  <FormGroup>\r\n                    <i className=\"fab fa-youtube fa-2x\" />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"YouTube URL\"\r\n                      name=\"youtube\"\r\n                      value={formData.youtube}\r\n                      onChange={e => handleChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </>\r\n              )}\r\n              <FormGroup className=\"last-form\">\r\n                <Submit\r\n                  type=\"submit\"\r\n                  value=\"프로필 등록\"\r\n                  onClick={e => handleSubmit(e)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </LoginBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default ProfileFormPresenter;\r\n","import ProfileFormContainer from \"./ProfileFormContainer\";\r\n\r\nexport default ProfileFormContainer;\r\n","import React, { useState } from \"react\";\r\nimport ProfileFormPresenter from \"./ProfileFormPresenter\";\r\n\r\nconst ProfileFormContainer = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n  };\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n  return (\r\n    <ProfileFormPresenter\r\n      {...formData}\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n      displaySocialInputs={displaySocialInputs}\r\n      toggleSocialInputs={toggleSocialInputs}\r\n    ></ProfileFormPresenter>\r\n  );\r\n};\r\n\r\nexport default ProfileFormContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Main = styled.main`\r\n  background-color: #fdf7ff;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\nconst Wrapper = styled.section`\r\n  padding: 50px 0;\r\n`;\r\nconst ProfileBox = styled.div`\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  width: 60%;\r\n  margin: auto;\r\n  border-radius: 5px;\r\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\r\n`;\r\nconst Avatar = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 1px solid;\r\n  border-radius: 120px;\r\n  margin: auto;\r\n`;\r\nconst DetailPresenter = () => {\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <Wrapper>\r\n          <ProfileBox>\r\n            <Avatar></Avatar>\r\n          </ProfileBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nconst DetailContainer = () => {\r\n  return <DetailPresenter></DetailPresenter>;\r\n};\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.footer`\r\n  background-color: #2f2f2f;\r\n  padding-bottom: 50px;\r\n  padding-top: 50px;\r\n`;\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n  padding: 10px;\r\n  display: flex;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\nconst ItemBox = styled.div`\r\n  width: 33.3333333%;\r\n`;\r\nconst FooterTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  h3 {\r\n    font-size: 24px;\r\n    color: #fff;\r\n    padding: 10px;\r\n  }\r\n`;\r\nexport default () => {\r\n  return (\r\n    <Footer>\r\n      <Container>\r\n        <Wrapper>\r\n          <ItemBox>\r\n            <FooterTitle>\r\n              <h3>MY PROJECT</h3>\r\n            </FooterTitle>\r\n          </ItemBox>\r\n          <ItemBox>\r\n            <FooterTitle>\r\n              <h3>MY PROJECT</h3>\r\n            </FooterTitle>\r\n          </ItemBox>\r\n          <ItemBox>\r\n            <FooterTitle>\r\n              <h3>MY PROJECT</h3>\r\n            </FooterTitle>\r\n          </ItemBox>\r\n        </Wrapper>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ButtonBox = styled.div`\r\n  width: 100px;\r\n  height: 40px;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  z-index: 1;\r\n  border-radius: 100px;\r\n  background-color: yellow;\r\n`;\r\nconst Button = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst CreateBtn = () => {\r\n  return (\r\n    <ButtonBox>\r\n      <Button to=\"/create-profile\">프로필 생성</Button>\r\n    </ButtonBox>\r\n  );\r\n};\r\n\r\nexport default CreateBtn;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Header from \"./layouts/Header\";\r\nimport Home from \"../Routes/Home\";\r\nimport Talent from \"../Routes/Talent\";\r\nimport Profile from \"../Routes/Profile\";\r\nimport Login from \"../Routes/Login\";\r\nimport Register from \"../Routes/Register\";\r\nimport ProfileForms from \"../Routes/ProfileForms\";\r\nimport ProfileDetail from \"../Routes/ProfileDetail\";\r\nimport Footer from \"./layouts/Footer\";\r\nimport CreateBtn from \"./CreateBtn\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/talent\" component={Talent} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/profile-detail/:profile_id\" component={ProfileDetail} />\r\n        <Route path=\"/create-profile\" component={ProfileForms} />\r\n        <Redirect from=\"/*\" to=\"/\" />\r\n      </Switch>\r\n      <CreateBtn />\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return { ...state, token: null, isAuthenticated: false, loading: false };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case LOGIN_FAIL:\r\n    case REGISTER_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return { ...state, isAuthenticated: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport alert from \"./alert\";\r\n\r\nexport default combineReducers({ auth, alert });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst state = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  state,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport Router from \"./Router\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"../store\";\r\nimport { loadUser } from \"../actions/auth\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    console.log(\"hello\");\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyles />\r\n      <Router />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}